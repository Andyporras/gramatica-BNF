package com.compi;

import java_cup.runtime.*;
import java.io.*;
import java.util.*;
import java.lang.Math;

/**
 * Clase principal del compilador
 */
class Parser;

/**
 * Definicion de tokens terminales y no terminales
 */

/* Terminales */

// Operadores aritméticos binarios
terminal RUDOLPH; // +
terminal  DASHER; // -
terminal  DANCER; // /
terminal  PRANCER; // // (division entera)
terminal  VIXEN; // *
terminal  COMET; // ~
terminal CUPID; // **
// Operadores aritméticos unarios
terminal  GRINCH; // ++
terminal  QUIEN; // --
// Operadores relacionales
terminal  HERMEY; // <
terminal  BUDDY; // =<
terminal  JINGLE; // >
terminal JANGLE; // >=
terminal  PEPPERMINT; // ==
terminal  WUNORSE; // !=
// Operadores lógicos
terminal  MELCHOR; // ^
terminal  GASPAR; // #
terminal BALTASAR; // !
terminal  LOCAL; // !

// Tipos
terminal String PERSONA; // identificador
terminal Integer SANTACLAUS; // int
terminal Double PERENOEL; // float
terminal Boolean FATHERCHRISTMAS; // boolean
terminal Character KRISKRINGLE; // char
terminal String DEDMOROZ; // string
terminal Integer[] PAPANOEL; // array
terminal Integer L_SANTACLAUS; // literal int
terminal Double L_PERENOEL; // literal float
terminal Boolean L_FATHERCHRISTMAS; // literal boolean
terminal Character L_KRISKRINGLE; // literal char
terminal String L_DEDMOROZ; // literal string
terminal Integer[] L_PAPANOEL; // literal array

// Parentesis
terminal Integer ABRECUENTO; // (
terminal Integer CIERRECUENTO; // )
terminal Integer ABREEMPAQUE; // [
terminal Integer CIERREEMPAQUE; // ]
terminal Integer ABREREGALO; // {
terminal Integer CIERRAREGALO; // }

// Estructuras de control
terminal Integer ELFO;//if
terminal Integer HADA;//else
terminal Integer DUENDE;//else
terminal Integer ENVUELVE;//for
terminal Integer HACE;//do
terminal Integer REVISA;//until
terminal Integer ENVIA;//return
terminal Integer CORTA;//break

// Entrada y salida
terminal Integer NARRA;//print
terminal Integer ESCUCHA;//read 

// Fin de expresión
terminal  FINREGALO; // |

// Lexema separador
terminal Integer COMA; //,

// Asignación
terminal Integer ENTREGA;//<=

// Comentarios
// son ignorados por el compilador

// Funciones
terminal Integer MAIN; //main
//terminal Integer REGALO; // definicion de funcion 
terminal Integer FUNCTION; // definicion de funcion 

//-------------------------------------------------------------------------------------- NO Terminales
non terminal navidad; // Símbolo inicial
non terminal bolsanavidena; // produccion para funciones
non terminal regalo; // produccion para expresiones
non terminal regaloprin; // produccion para expresiones aritméticas
non terminal regalocomprado; // produccion para expresiones relacionales
non terminal regalomanual; // produccion para expresiones lógicas

non terminal regalopersonalizado; // produccion para expresiones unarias
non terminal regaloespecial; // produccion para expresiones de asignacion
//non terminal copodenieve;
non terminal sentencia;



//-------------------------------------------------------------------------------------- PRECEDENCIA
precedence left RUDOLPH, DASHER; // suma y resta
precedence left DANCER, PRANCER; // division y division entera
precedence left VIXEN, COMET; // multiplicacion y modulo
precedence left GRINCH, QUIEN; // incremento y decremento
precedence left HERMEY, BUDDY, JINGLE, JANGLE, PEPPERMINT, WUNORSE; // operadores relacionales
precedence left MELCHOR, GASPAR; // operadores lógicos
precedence left BALTASAR; // operador lógico not
precedence left ABRECUENTO, CIERRECUENTO; // parentesis
precedence left ABREEMPAQUE, CIERREEMPAQUE; // corchetes
precedence left ABREREGALO, CIERRAREGALO; // llaves
precedence left ELFO, HADA, DUENDE, ENVUELVE, HACE, REVISA, ENVIA, CORTA; // estructuras de control
precedence left NARRA, ESCUCHA; // entrada y salida
precedence left FINREGALO; // fin de expresión
precedence left COMA; // lexema separador
precedence left ENTREGA; // asignacion
precedence left MAIN; // main
precedence left FUNCTION; // definicion de funcion

//-------------------------------------------------------------------------------------- PRODUCCIONES
/* Símbolo inicial y producciones gramaticales*/
start with navidad;

/* Producciones gramaticales */

navidad ::= bolsanavidena;

bolsanavidena ::= regalo
               | bolsanavidena regalo;

regalo ::= regaloprin // aritméticas (sumas, restas, etc)✅
         | regalocomprado // expresiones relacionales (menor, mayor, etc) ✅
         | regalomanual // expresiones lógicas (and, or, etc) ✅
         | regalopersonalizado // expresiones unarias (incremento, decremento, etc)✅
         | regaloespecial // expresiones de asignacion (asignacion, etc)✅
         | MAIN regalo
         | FUNCTION regalo
         | PERSONA regalo
         | SANTACLAUS regalo
         | PERENOEL regalo
         | FATHERCHRISTMAS regalo
         | KRISKRINGLE regalo
         | DEDMOROZ regalo
         | PAPANOEL regalo
         | L_SANTACLAUS regalo
         | L_PERENOEL regalo
         | L_FATHERCHRISTMAS regalo
         | L_KRISKRINGLE regalo
         | L_DEDMOROZ regalo
         | L_PAPANOEL regalo
         | ABRECUENTO regalo CIERRECUENTO // (expr)
         | ABREEMPAQUE regalo CIERREEMPAQUE // [expr]
         | ABREREGALO regalo CIERRAREGALO // {expr}
         | ABRECUENTO CIERRECUENTO // ()
         | ABREEMPAQUE CIERREEMPAQUE // []
         | ABREREGALO CIERRAREGALO // {}
         | ENVIA regalo; // return expr

// aritméticas (sumas, restas, etc)
regaloprin ::= RUDOLPH regalo // +
            | DASHER regalo // -
            | DANCER regalo // /
            | PRANCER regalo // //
            | VIXEN regalo // *
            | COMET regalo // ~
            | CUPID regalo; // **

regalocomprado ::= regalo HERMEY regalo // <
              | regalo BUDDY regalo // =<
              | regalo JINGLE regalo // >
              | regalo JANGLE regalo // >=
              | regalo PEPPERMINT regalo // ==
              | regalo WUNORSE regalo; // !=

regalomanual ::= regalo MELCHOR regalo // expr and expr
              | regalo GASPAR regalo // expr or expr
              | BALTASAR regalo; // !expr

regalopersonalizado ::= GRINCH regaloespecial // ++
                    | QUIEN regaloespecial; // --

sentencia ::= LOCAL PERSONA regalo // declaración de variables
            | regalo FINREGALO; // expresión   

/* Producción para estructuras de control if-elif-else, print, read Y COMA */
regaloespecial ::= ELFO ABRECUENTO regalo CIERRECUENTO regalo // if
               | ELFO ABRECUENTO regalo CIERRECUENTO regalo HADA regalo // if-else
               | ELFO ABRECUENTO regalo CIERRECUENTO regalo HADA regalo DUENDE regalo // if-elif-else
               | NARRA regalo // print expr
               | ESCUCHA regalo // read expr
               | COMA regalo // ,
               | ENTREGA regalo // <= expr
               | HACE regalo REVISA ABRECUENTO regalo CIERRECUENTO FINREGALO
               | ENVUELVE ABRECUENTO sentencia regalo FINREGALO regalo FINREGALO sentencia CIERRECUENTO regalo
               | CORTA regalo;